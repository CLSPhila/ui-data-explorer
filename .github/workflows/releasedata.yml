# Workflow to pull the datadownload docker image, run it, and store the created data.
name: Process and publish unemployment data as a parquet file and a collection of csv files
on:
  workflow_dispatch:
  # to run manually.
  schedule:
    # update data daily.
    - cron: "45 12 * * *"
  #push: 
env:
  FRED_KEY: ${{secrets.FRED_KEY}}
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  UI_EXPLORER_GOOGLE_PASSWORD:  ${{secrets.UI_EXPLORER_GOOGLE_PASSWORD}} 
  IMAGE_NAME: uidatadownloader
jobs:
  build:
    name: Download Data
    runs-on: ubuntu-latest
    steps:
      - name: Set image id
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase

          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo "IMAGE_ID=$IMAGE_ID:$VERSION" >> $GITHUB_ENV
          # echo "::set-env name=IMAGE_ID::$IMAGE_ID:$VERSION"
          echo "IMAGE ID: $IMAGE_ID"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download and process data
        run: |
          docker-compose run --rm datadownload
      - name: Create release for the parquet data, or update if necessary.
        run: . ./updateRelease.sh $GITHUB_REPOSITORY uiExplorerData unemployment_data.parquet
      - name: Zip csv data, to release it.
        run: zip data/unemployment_data.zip data/*.csv
      - name: Create or update release for csv data.
        run: |
          rm data/EUC-1982-1987-USDOLData.csv
          . ./updateRelease.sh $GITHUB_REPOSITORY uiExplorerCSV unemployment_data.zip
