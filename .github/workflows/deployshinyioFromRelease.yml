# Workflow to deploy the app to shinyapps.io using the Release of UC data, processed by another action.

# Do this by running the ui-explorer container with a CMD that calls the r script that deploys the app. (and overrides the default r script that
#   processes the data. )
name: Deploy ui-explorer to shinyapps.io using the Released verion of the parquet data.
on:
  workflow_dispatch: # when complete, run this when the 'release data' workflow completes,  https://docs.github.com/en/actions/reference/events-that-trigger-workflows#release

  #push:  
#   workflow_run:
#     # run when the release workflow finishes.
#     # See https://docs.github.com/en/actions/reference/events-that-trigger-workflows#workflow_run
#     workflows:
#       [
#         "Process and publish unemployment data as a parquet file and a collection of csv files",
#       ]
#     branches: [main]
#     types:
#       - completed


env:
  IMAGE_NAME: uidatadownloader
jobs:
  build:
    runs-on: ubuntu-latest
    name: Deploy ui-explorer to shinyapps.io using Released version of data.
    steps:
      - name: Setup repository
        uses: actions/checkout@v2
      - name: Download release of feather data
        run: |
          curl -L https://github.com/$GITHUB_REPOSITORY/releases/download/uiExplorerData/unemployment_data.parquet --output data/unemployment_data.parquet
      - name: Run docker with CMD set to run the script that deploys the app.
        env:
          R_CONFIG_ACTIVE: docker
          FRED_KEY: ${{secrets.FRED_KEY}}
          SHINYAPPS_SECRET: ${{secrets.SHINYAPPS_SECRET}}
          SHINYAPPS_TOKEN: ${{secrets.SHINYAPPS_TOKEN}}
          SHINYAPPS_ACCOUNT: ${{secrets.SHINYAPPS_ACCOUNT}}
        run: |
          # I think we want to build the image when we run this, rather than relying on the stored image.
          #IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase

          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "$default-branch" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker-compose run --rm shinyappsdeploywithrelease
